@model IEnumerable<TradeClientTestTemplate.Models.Order>

<div class="container p-3">
    <div class="row pt-4">
        <div class="col-6">
            <h4 class="display-4 text-danger">Order List</h4>
        </div>
        <div class="col-6 text-right">
            <a asp-controller="Order" asp-action="Create" class="btn btn-primary btn-lg" type="button">
                <span class="btn-inner--text">Place new Order</span>
            </a>
        </div>
    </div>
</div>


<div class="table-responsive ">

        <div>
            @if (Model.Count() > 0)
            {
                <table class="table"
                       id="tableTESTOR"
                       data-show-columns="true"
                       data-search="true"
                       data-show-toggle="true"
                       data-pagination="true"
                       data-show-pagination-switch="true"
                       data-resizable="true" >
                    <thead>
                        <tr>
                            <th scope="col"><i class="fas fa-cogs text-info"></i></th>
                            <th scope="col" class="sort" data-sort="Status" data-sortable="true">Status</th>
                            <th scope="col" class="sort" data-sort="TransactTime" data-sortable="true">Transact Time</th>
                            <th scope="col" class="sort" data-sort="budget" data-sortable="true">Side</th>
                            <th scope="col" class="sort" data-sort="status" data-sortable="true">Symbol</th>
                            <th scope="col" class="sort" data-sort="Quantity" data-sortable="true">Quantity</th>
                            <th scope="col" class="sort" data-sort="Price" data-sortable="true">Limit Price</th>
                            <th scope="col" class="sort" data-sort="Price" data-sortable="true">Stop Price</th>
                            <th scope="col" class="sort" data-sort="OrderType" data-sortable="true">Order Type</th>
                            <th scope="col" class="sort" data-sort="TimeInForce" data-sortable="true">TimeInForce</th>
                            @*<th scope="col" class="sort" data-sort="Notes">Notes</th>*@

                        </tr>
                    </thead>

                    <tbody @*class="list"*@>
                        @foreach (var obj in Model)
                        {
                        <tr>
                            <td class="text-right">
                                <div class="dropdown">
                                    <a class="btn btn-sm btn-icon-only text-dark" href="#" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                        <i class="fas fa-ellipsis-v text-danger"></i>
                                    </a>
                                    <div class="dropdown-menu dropdown-menu-right dropdown-menu-arrow">
                                        <a class="dropdown-item" href="#">Details</a>
                                        <a class="dropdown-item" href="#">Cancel</a>
                                        <a class="dropdown-item" href="#">Replace</a>
                                    </div>
                                </div>
                            </td>
                            <td></td>
                            <td>@obj.TransactTime</td>
                            <td>
                                @if (obj.Side == 1)
                                {
                                    <span>BUY</span>
                                }
                                else
                                {
                                    <span>SELL</span>
                                }
                            </td>
                            <td>@obj.Symbol</td>
                            <td>@obj.Quantity</td>
                            <td>@obj.limitPrice</td>
                            <td>@obj.stopPrice</td>
                            <td>
                                @switch (int.Parse(obj.OrderType.ToString()))
                                {
                                    case 1:
                                        <span>Market</span>;
                                        break;
                                    case 2:
                                        <span>Limit</span>;
                                        break;
                                    case 3:
                                        <span>Stop</span>;
                                        break;
                                    case 4:
                                        <span>Stop-Limit</span>;
                                        break;
                                }
                            </td>
                            <td>
                                @switch (int.Parse(obj.TimeInForce.ToString()))
                                {
                                    case 0:
                                        <span>Day</span>;
                                        break;
                                    case 1:
                                        <span>Good Till Cancel <small class="text-muted">(GTC)</small></span>;
                                        break;
                                    case 3:
                                        <span>Immediate Or Cancel <small class="text-muted">(IOC)</small></span>;
                                        break;
                                    case 4:
                                        <span>Fill Or Kill <small class="text-muted">(FOK)</small></span>;
                                        break;
                                }
                            </td>
                            @*<td>@obj.Note</td>*@

                        </tr>
                        }
                    </tbody>
                </table>
            }
        
            else
                {
                    <h1 class="display-2 text-center"> No Order Exists.</h1>
                }
        </div>

    </div>

