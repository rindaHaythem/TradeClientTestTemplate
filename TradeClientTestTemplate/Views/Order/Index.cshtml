@model IEnumerable<TradeClientTestTemplate.Models.Order>

<div class="container p-3">
    <div>
        <a asp-area="Models" asp-controller="Home" asp-action="Index" class="text-info" type="button"><i class="fas fa-angle-left"></i> Go back Home</a>
    </div>
    <div class="row pt-4">
        <div class="col-6">
            <h4 class="display-4 text-danger">Order List</h4>
        </div>
        <div class="col-6 text-right">
            <a asp-controller="Order" asp-action="Create" class="btn btn-primary p-1 btn-lg" type="button">
                <span ><i class="fas fa-plus"></i> &nbsp; Create new Order</span>
            </a>
        </div>
    </div>
</div>


<div class="table-responsive ">

        <div>
            @if (Model.Count() > 0)
            {
                <table 
                        id="tableTESTOR"
                        data-show-columns="true"
                        data-search="true"
                       data-show-toggle="true"
                       data-pagination="false"
                       data-show-pagination-switch="false"
                       data-resizable="true"
                        data-show-multi-sort="true"
                       data-sort-priority='[{"sortName": "timeCreated","sortOrder":"desc"}]'
                       data-show-refresh="false"
                       data-key-events="false"
                       >
                    <thead>
                        <tr>

                            <th scope="col" class="sort" data-field="Status" data-sort="Status" data-sortable="false">Status</th>
                            <th scope="col" class="sort" data-field="timeCreated" data-sort="timeCreated" data-sortable="true">Created time</th>
                            <th scope="col" class="sort" data-sort="budget" data-sortable="true">Side</th>
                            <th scope="col" class="sort" data-sort="status" data-sortable="true">Symbol</th>
                            <th scope="col" class="sort" data-sort="Quantity" data-sortable="true">Quantity</th>
                            <th scope="col" class="sort" data-sort="Trader" data-sortable="true">Trader</th>
                            <th scope="col" class="sort" data-sort="Account" data-sortable="true">Account</th>
                            <th scope="col" class="sort" data-sort="Price" data-sortable="true">Limit Price</th>
                            <th scope="col" class="sort" data-sort="Price" data-sortable="true">Stop Price</th>
                            <th scope="col" class="sort" data-sort="OrderType" data-sortable="true">Order Type</th>
                            <th scope="col" class="sort" data-sort="TimeInForce" data-sortable="true">TimeInForce</th>
                            <th scope="col" class="sort" data-sort="Notes">Notes</th>

                        </tr>
                    </thead>

                    <tbody @*class="list"*@>
                        @foreach (var obj in Model)
                        {
                        <tr>

                            <td>
                                @switch (obj.status)
                                {
                                    case '0':
                                        <span class="badge badge-success text-center">New</span>;
                                        break;
                                    case '1':
                                        <span class="badge badge-warning text-center">Partially filled</span>;
                                        break;
                                    case '2':
                                        <span class="badge badge-dark text-center">Filled</span>;
                                        break;
                                    case '4':
                                        <span class="badge badge-danger text-center">Canceled</span>;
                                        break;
                                    case '5':
                                        <span class="badge badge-info text-center">Replaced</span>;
                                        break;
                                    case '6':
                                        <span class="badge badge-warning text-center">Pending Cancel</span>;
                                        break;
                                    case '7':
                                        <span class="badge badge-primary text-center">Stopped</span>;
                                        break;
                                    case '8':
                                        <span class="badge badge-danger text-center">Rejected</span>;
                                        break;
                                    case 'E':
                                        <span class="badge badge-info text-center">Pending Replace</span>;
                                        break;

                                }
                            </td>
                            <td>@obj.timeCreated</td>
                            <td>
                                @if (obj.Side == 1)
                                {
                                    <span class="text-success font-weight-bold"> BUY</span>
                                }
                                else
                                {
                                    <span class="text-danger font-weight-bold"> SELL</span>
                                }
                            </td>
                            <td>@obj.Symbol</td>
                            <td>@obj.Quantity</td>
                            <td>@obj.trader</td>
                            <td>@obj.account</td>
                            <td>@obj.limitPrice</td>
                            <td>@obj.stopPrice</td>
                            <td>
                                @switch (int.Parse(obj.OrderType.ToString()))
                                {
                                    case 1:
                                        <span>Market</span>;
                                        break;
                                    case 2:
                                        <span>Limit</span>;
                                        break;
                                    case 3:
                                        <span>Stop</span>;
                                        break;
                                    case 4:
                                        <span>Stop-Limit</span>;
                                        break;
                                }
                            </td>
                            <td>
                                @switch (int.Parse(obj.TimeInForce.ToString()))
                                {
                                    case 0:
                                        <span>Day</span>;
                                        break;
                                    case 1:
                                        <span>Good Till Cancel <small class="text-muted">(GTC)</small></span>;
                                        break;
                                    case 3:
                                        <span>Immediate Or Cancel <small class="text-muted">(IOC)</small></span>;
                                        break;
                                    case 4:
                                        <span>Fill Or Kill <small class="text-muted">(FOK)</small></span>;
                                        break;
                                }
                            </td>
                            <td>@obj.Note</td>
                            
                        </tr>
                        }
                    </tbody>
                </table>
            }
        
            else
                {
                    <h1 class="display-2 text-center"> No Order Exists.</h1>
                }
        </div>

    </div>

