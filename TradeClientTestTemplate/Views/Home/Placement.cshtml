@model IEnumerable<TradeClientTestTemplate.Models.Placement>

<div class="container p-2">
    <div class="table table-sm">

        <div>
            @if (Model.Count() > 0)
            {
                <table table id="tableTESTOR"
                       data-search="true"
                       data-show-columns="true"
                       data-show-toggle="true"
                       data-show-multi-sort="true">
                    <thead>
                        <tr>
                            <th class="text-center text-danger"><strong>Action</strong></th>
                            <th scope="col" class="sort" data-field="Status" data-sort="Status" data-sortable="true"><i class="fas fa-stream"></i>&ensp;STATUS</th>
                            <th scope="col" class="sort" data-sortable="true">DESTINATION ID</th>
                            <th scope="col" class="sort" data-sort="Placed" data-sortable="true">PLACED</th>
                            <th scope="col" class="sort" data-sortable="true">PRICE</th>
                            <th scope="col" class="sort" data-sort="Filled" data-sortable="true">FILLED</th>
                            <th scope="col" class="sort" data-sort="AvgPrice" data-sortable="true">AVG PX</th>
                            <th scope="col" class="sort" data-sort="Working" data-sortable="true">WORKING</th>
                            <th scope="col" class="sort" data-sort="TimeInForce" data-sortable="true">TIF</th>
                            <th scope="col" class="sort" data-sort="TransactTime" data-sortable="true">TIME</th>
                            <th scope="col" class="sort" data-sort="Broker" data-sortable="true">BROKER</th>
                            <th scope="col" class="sort" data-sort="ClOrdId" data-sortable="true">FIX ID</th>
                            <th scope="col" class="sort" data-sort="PlacementID" data-sortable="true">PLACEMENT ID</th>
                        </tr>
                    </thead>

                    <tbody class="list">
                        @foreach (var pl in Model)
                        {
                            <tr>
                                <td>
                                    <div class="btn-group" role="group" aria-label="Button group with nested dropdown">
                                    </div>
                                </td>
                                <td>
                                    @{ if (pl.status.Equals('P'))
                                        {
                                            <span class="text-info text-center"><i class="fas fa-spinner fa-pulse"></i>&ensp;<strong class="text-muted">Pending</strong></span>
                                        }
                                        else if (pl.status.Equals('W'))
                                        {
                                            <span class="text-primary text-center"><i class="fas fa-spinner fa-spin"></i>&ensp;<strong class="text-muted">Working</strong></span>
                                        }
                                        else if (pl.status.Equals('4'))
                                        {
                                            <span class="text-warning text-center"><i class="fas fa-spinner fa-spin"></i>&ensp;<strong class="text-muted">Canceled</strong></span>
                                        }
                                        else if (pl.status.Equals('8'))
                                        {
                                            <span class="text-danger text-center"><i class="fas fa-spinner fa-spin"></i>&ensp;<strong class="text-muted">Rejected</strong></span>
                                        }
                                    }
                                    @*@switch (pl.status)
                                    {

                                        case 'P':
                                            <span class="text-info text-center"><i class="fas fa-spinner fa-pulse"></i>&ensp;<strong class="text-muted">Pending</strong></span>;
                                            break;
                                        case 'W':
                                            <span class="text-primary text-center"><i class="fas fa-spinner fa-spin"></i>&ensp;<strong class="text-muted">Working</strong></span>;
                                            break;
                                        case '1':
                                            <span class="badge badge-warning text-center badge-pill">Partially filled</span>; //Blotter Status
                                            break;
                                        case '2':
                                            <span class="badge badge-dark text-center badge-pill">Filled</span>;
                                            break;
                                        case '4':
                                            <span class="badge badge-danger text-center badge-pill">Canceled</span>;
                                            break;
                                        case '5':
                                            <span class="badge badge-info text-center badge-pill">Replaced</span>;
                                            break;
                                        case '6':
                                            <span class="badge badge-warning text-center badge-pill">Pending Cancel</span>;
                                            break;
                                        case '7':
                                            <span class="badge badge-primary text-center badge-pill">Stopped</span>;
                                            break;
                                        case '8':
                                            <span class="badge badge-danger text-center badge-pill">Rejected</span>;
                                            break;
                                        case 'E':
                                            <span class="badge badge-info text-center badge-pill">Pending Replace</span>; //sub status
                                            break;
                                    }*@
                                </td>
                                <td></td>
                                <td>@pl.Placed</td>
                                <td>
                                    @switch (int.Parse(pl.OrderType.ToString()))
                                    {
                                        case 1:
                                            <span class="badge badge-dark text-center badge-pill">Market</span>;
                                            break;
                                        case 2:
                                            @pl.limitPrice;
                                            break;
                                        case 3:
                                            <i class="fab fa-stripe-s"></i> @pl.stopPrice;
                                            break;
                                        case 4:
                                            <i class="fab fa-stripe-s"></i> @pl.stopPrice;
                                            @pl.limitPrice;
                                            break;
                                        case 5:
                                            <span class="badge badge-info text-center badge-pill">Market On Close</span>;
                                            break;
                                    }
                                </td>
                                <td>@pl.Filled</td>
                                <td>@pl.AvgPrice</td>
                                <td>@pl.Working</td>
                                <td>
                                    @switch (int.Parse(pl.TimeInForce.ToString()))
                                    {
                                        case 0:
                                            <span>Day</span>;
                                            break;
                                        case 1:
                                            <span>Good Till Cancel <small class="text-muted">(GTC)</small></span>;
                                            break;
                                        case 3:
                                            <span>Immediate Or Cancel <small class="text-muted">(IOC)</small></span>;
                                            break;
                                        case 4:
                                            <span>Fill Or Kill <small class="text-muted">(FOK)</small></span>;
                                            break;
                                        case 6:
                                            <span>Good Till Day <small class="text-muted">(GTD)</small></span>;
                                            break;
                                    }
                                </td>
                                <td>
                                    @if ((DateTime.Compare(pl.SendingTime, Convert.ToDateTime("01/01/0001 00:00:00"))) == 0)
                                    {
                                        <span class="text-muted"><strong>Order still new</strong></span>
                                    }
                                    else
                                    {
                                        @pl.SendingTime
                                    }
                                </td>
                                <td>@pl.Broker</td>
                                <td>@pl.PlacementID</td>
                            </tr>
                        }
                    </tbody>
                </table>
            }

            else
            {
                <h1 class="display-2 text-center"> No Order Exists.</h1>
            }
        </div>

    </div>

</div>
